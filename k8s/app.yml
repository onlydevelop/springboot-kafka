kind: Deployment
apiVersion: apps/v1
metadata:
  name: filestore-deployment
  labels:
    app: filestore
spec:
  replicas: 1
  selector:
    matchLabels:
      app: filestore
  template:
    metadata:
      labels:
        app: filestore
    spec:
      containers:
        - name: filestore
          image: filestore:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: spring.profiles.active
              value: 'docker'
---
apiVersion: v1
kind: Service
metadata:
  name: filestore
spec:
  selector:
    app: filestore
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: uploader-deployment
  labels:
    app: uploader
spec:
  replicas: 1
  selector:
    matchLabels:
      app: uploader
  template:
    metadata:
      labels:
        app: uploader
    spec:
      containers:
        - name: uploader
          image: uploader:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: spring.profiles.active
              value: 'docker'
---
apiVersion: v1
kind: Service
metadata:
  name: uploader
spec:
  selector:
    app: uploader
  type: NodePort
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 80
---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: parser-deployment
  labels:
    app: parser
spec:
  replicas: 1
  selector:
    matchLabels:
      app: parser
  template:
    metadata:
      labels:
        app: parser
    spec:
      containers:
        - name: parser
          image: parser:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80
          env:
            - name: spring.profiles.active
              value: 'docker'
---
apiVersion: v1
kind: Service
metadata:
  name: parser
spec:
  selector:
    app: parser
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
